# 2.Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей.
# Дано a, b, c - стороны предполагаемого треугольника. Требуется сравнить длину каждого
# отрезка-стороны с суммой двух других. Если хотя бы в одном случае отрезок окажется больше
# суммы двух других, то треугольника с такими сторонами не существует. Отдельно сообщить
# является ли треугольник разносторонним, равнобедренным или равносторонним.

# Т.к. в задании не уточняется каким образом получать данные и к какому типу они должны относиться,
# будем считать, что пользователь должен ввести три целых, положительных числа через пробел (input)

class Triangle:
    def __new__(cls, a, b, c, *args, **kwargs):
        if cls.is_triangle(a, b, c):
            print('Треугольник создан :).')
            return super().__new__(cls)
        else:
            print('Не знаю что это, но точно не треугольник :(.')

    def __init__(self, a, b, c):
        self.__a = a
        self.__b = b
        self.__c = c
        self.tr = self.who_am_i()

    def who_am_i(self):
        if self.__a == self.__b == self.__c:
            return 'Я равносторонний треугольник.'
        elif self.__a == self.__b or self.__b == self.__c or self.__a == self.__c:
            return 'Я равнобедренный треугольник.'
        else:
            return 'Я разносторонний треугольник.'

    @classmethod
    def is_triangle(cls, a, b, c):
        print(a, b, c)
        return a < b + c and b < a + c and c < b + a and a > 0 and b > 0 and c > 0


while True:
    try:
        a, b, c = map(int, input('Введите 3 целых числа, разделенные пробелом: ').split())
        break
    except ValueError:
        print('Введены некорректные данные. Попробуйте еще раз.')


tr = Triangle(a, b, c)
if tr:
    print(tr.tr)
